
// Root base
// ------------------------------------------------------------------

%typebaseRoot {
	line-height: $lineheightRoot;
	margin-bottom: 0;
	margin-top: 0;
}

// Kerning
// ------------------------------------------------------------------

%kernTight 	{ letter-spacing: -0.125rem; font-kerning: normal; }
%kernLoose 	{ letter-spacing: 0.2rem; }


// Typescale
// ------------------------------------------------------------------

.typeMasthead {
	@extend %typebaseRoot;
	@extend %kernTight;
	font-size: rem($typeMasthead);
	line-height: 1;
	&_trailer {
		margin-bottom: rem($typeMasthead/4);
	}
}

.typeHeadline {
	@extend %typebaseRoot;
	@extend %kernTight;
	font-size: rem($typeHeadline);
	line-height: 1.4;
	&_trailer {
		margin-bottom: rem($typeHeadline/2);
	}
}

.typeByline {
	@extend %typebaseRoot;
	@extend %kernTight;
	font-size: rem($typeByline);
	line-height: 1.4;
	&_trailer {
		margin-bottom: rem($typeByline/4);
	}
}

.typeXL {
	@extend %typebaseRoot;
	font-size: rem($typeXL);
	&_trailer {
		margin-bottom: rem($typeXL/2);
	}
}

.typeL {
	@extend %typebaseRoot;
	font-size: rem($typeL);
	&_trailer {
		margin-bottom: rem($typeL/2);
	}
}

.typeM {
	@extend %typebaseRoot;
	font-size: rem($typeM);
	&_trailer {
		margin-bottom: rem($typeM/2);
	}
}

// Median
.typeMe {
	@extend %typebaseRoot;
	font-size: rem($typeMe);
	&_trailer {
		margin-bottom: rem($typeM/2);
	}
}

.typeS {
	@extend %typebaseRoot;
	font-size: rem($typeS);
	&_trailer {
		margin-bottom: rem($typeS/2);
	}
}

.typeXS {
	@extend %typebaseRoot;
	font-size: rem($typeXS);
	&_trailer {
		margin-bottom: rem($typeXS/2);
	}
}

// Heading styles
// ------------------------------------------------------------------

.heading {
	display: block;
	font-weight: $fontBold;
	color: $dmHeadings;
}

// Default text
// ------------------------------------------------------------------

.text {
	@extend %typebaseRoot;
	font-size: rem($typeDefault);
}

%textList {
	li {
		@extend %typebaseRoot;
		font-size: rem($typeDefault);
	}
}

.unordered-list {
	list-style-type: square;
	@extend %textList;
	ul {
		list-style-type: square;
		padding-left: 2rem;
	}
}

.ordered-list {
	list-style-type: decimal;
	@extend %textList;
	ol {
		list-style-type: decimal;
		padding-left: 2rem;
	}
}


// Typebase (for runs of text)
// ------------------------------------------------------------------

.typebase {
	p {
		margin-top: rem($typeMe);
	}
	p,
	li {
		@extend .text;
		display: block;
	}
	ul,
	ol {
		margin-top: rem($typeMe);
	}
	ul {
		@extend .unordered-list;
	}
	ol {
		@extend .ordered-list;
	}
	img, pre {
		display: block;
		margin-top: rem($typeDefault*2);
		margin-bottom: rem($typeDefault);
	}

	h1, h2, h3, h4, h5, h6 {
		@extend .heading;
		margin-top: rem($typeMe*2);
	}
	h1 {
		@extend .typeXL;
	}
	h2 {
		@extend .typeL;
	}
	h3,h4 {
		@extend .typeM;
	}
	h5 {
		@extend .typeS;
		@extend %kernLoose;
		text-transform: uppercase;
	}
	h6 {
		@extend .typeXS;
		@extend %kernLoose;
		text-transform: uppercase;
	}

	// Remove next para or list top margin
	h1 + p,
	h2 + p,
	h3 + p,
	h4 + p,
	h5 + p,
	h6 + p,
	h1 + ol,
	h2 + ol,
	h3 + ol,
	h4 + ol,
	h5 + ol,
	h6 + ol,
	h1 + ul,
	h2 + ul,
	h3 + ul,
	h4 + ul,
	h5 + ul,
	h6 + ul {
		margin-top: 0;
	}

	// Tear out the initial top margin to allow things to flush together
	> h1:first-child,
	> h2:first-child,
	> h3:first-child,
	> h4:first-child,
	> h5:first-child,
	> h6:first-child,
	> img:first-child,
	> media-video-wrapper:first-child  {
		margin-top: 0;
	}

	// Stop empty spacing
	br + br,
	h1:empty,
	h2:empty,
	h3:empty,
	h4:empty,
	h5:empty,
	h6:empty,
	p:empty,
	ul:empty,
	ol:empty,
	span:empty,
	cite:empty,
	div:empty {
		display: none;
	}
}
